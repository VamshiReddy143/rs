@import "tailwindcss";
@import "tw-animate-css";
@import 'locomotive-scroll/dist/locomotive-scroll.css';
/* Your other global styles */

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}


/* globals.css */
body {
  font-family: var(--font-inter), Arial, sans-serif;
}


/* html, body {
  overflow: hidden;
  height: 100%;
} */


html {
  scroll-behavior: smooth;
  scroll-padding-top: 5rem; /* optional - if you have sticky nav */
}
/* Hide scrollbar for all elements */


body{
  background-color: black;
}







h3.apply-now {

  text-decoration: none; 
  color: #000000 !important; 
  position: relative;
  display: inline-block; 
  z-index: 1;
  transition: text-decoration 0.3s ease, color 0.3s ease; 
}


h3.apply-now::after {
  content: '→'; /* Arrow symbol */
  position: absolute;
  right: -1.5rem; /* Space after text */
  top: 50%;
  transform: translateY(-50%);
  color: #000000; /* Black arrow */
  transition: opacity 0.3s ease; /* Optional fade effect */
}

/* Large screens: Add underline, remove arrow */
@media (min-width: 1024px) { /* Tailwind's lg breakpoint */
  h3.apply-now {
    text-decoration: underline; /* Underline by default on lg */
    text-decoration-color: #000000; /* Black underline */
  }
  h3.apply-now::after {
    content: none; /* Remove arrow on lg */
  }
}

/* Pseudo-element for sliding background */
h3.apply-now::before {
  content: ''; /* No text/arrow */
  position: absolute;
  top: 0;
  left: 0;
  width: 0; /* Start with zero width */
  height: 100%; /* Full text height */
  background-color: #FFC83F; /* Yellow background */
  z-index: -1; /* Behind text */
  transition: width 0.6s ease, padding 0.3s ease; /* Animate width and padding */
  box-sizing: border-box; /* Include padding in width */
}

/* Hover styles for all screens */
h3.apply-now:hover::before {
  width: 100%; /* Full width on hover */
  padding: 0 8px; /* Padding left and right */
}

h3.apply-now:hover {
  text-decoration: none !important; /* Remove underline on hover (all screens) */
  color: #000000 !important;
}


[data-scroll-container] h3.apply-now {
  pointer-events: auto; 
}





[data-scroll-container] {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0;
  padding: 0;
}

section[data-scroll] {
  width: 100%;
  margin: 0;
  padding: 0;
 
  display: flex;
  flex-direction: column;
}


h3.apply-now {
  text-decoration: none;
  color: #000000 !important;
  position: relative;
  display: inline-block;
  z-index: 1;
  transition: text-decoration 0.3s ease, color 0.3s ease;
}

h3.apply-now::after {
  content: '→';
  position: absolute;
  right: -1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: #000000;
  transition: opacity 0.3s ease;
}

@media (min-width: 1024px) { 
  h3.apply-now {
    text-decoration: underline;
    text-decoration-color: #000000;
  }
  h3.apply-now::after {
    content: none;
  }
}

h3.apply-now::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: #FFC83F;
  z-index: -1;
  transition: width 0.6s ease, padding 0.3s ease;
  box-sizing: border-box;
}

h3.apply-now:hover::before {
  width: 100%;
  padding: 0 8px;
}

h3.apply-now:hover {
  text-decoration: none !important;
  color: #000000 !important;
}

[data-scroll-container] h3.apply-now {
  pointer-events: auto;
}




[data-scroll-container] {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0;
  padding: 0;
}

section[data-scroll] {
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
}

h3.apply-now {
  text-decoration: none;
  color: #000000 !important;
  position: relative;
  display: inline-block;
  z-index: 1;
  transition: text-decoration 0.3s ease, color 0.3s ease;
}

h3.apply-now::after {
  content: '→';
  position: absolute;
  right: -1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: #000000;
  transition: opacity 0.3s ease;
}

@media (min-width: 1024px) {
  h3.apply-now {
    text-decoration: underline;
    text-decoration-color: #000000;
  }
  h3.apply-now::after {
    content: none;
  }
}

h3.apply-now::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: #FFC83F;
  z-index: -1;
  transition: width 0.6s ease, padding 0.3s ease;
  box-sizing: border-box;
}

h3.apply-now:hover::before {
  width: 100%;
  padding: 0 8px;
}

h3.apply-now:hover {
  text-decoration: none !important;
  color: #000000 !important;
}

[data-scroll-container] h3.apply-now {
  pointer-events: auto;
}

/* New styles for Hero connecting line */
.steps-container {
  position: relative;
}

.steps-container::before {
  content: '';
  position: absolute;
  left: 7px; /* Center of the 16px dot (half of h-4/w-4) */
  top: 8px; /* Start at the center of the first dot */
  bottom: 8px; /* End at the center of the last dot */
  width: 1px; /* Thin line */
  background-color: #f6ff7a; /* Match dot color */
  z-index: 0; /* Behind dots */
}




/* Gap fixes for Page.tsx */
[data-scroll-container] {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0;
  padding: 0;
}

section[data-scroll] {
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
}

/* Challenges hover effect (unchanged) */
h3.apply-now {
  text-decoration: none;
  color: #000000 !important;
  position: relative;
  display: inline-block;
  z-index: 1;
  transition: text-decoration 0.3s ease, color 0.3s ease;
}

h3.apply-now::after {
  content: "→";
  position: absolute;
  right: -1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: #000000;
  transition: opacity 0.3s ease;
}

@media (min-width: 1024px) {
  h3.apply-now {
    text-decoration: underline;
    text-decoration-color: #000000;
  }
  h3.apply-now::after {
    content: none;
  }
}

h3.apply-now::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: #FFC83F;
  z-index: -1;
  transition: width 0.6s ease, padding 0.3s ease;
  box-sizing: border-box;
}

h3.apply-now:hover::before {
  width: 100%;
  padding: 0 8px;
}

h3.apply-now:hover {
  text-decoration: none !important;
  color: #000000 !important;
  padding: 3px;
}

[data-scroll-container] h3.apply-now {
  pointer-events: auto;
}

/* Connecting line for Hero */
.steps-container {
  position: relative;
}

.steps-container::before {
  content: "";
  position: absolute;
  left: 8px;
  top: 8px;
  bottom: 8px;
  width: 2px;
  background-color: #f6ff7a;
  z-index: 0;
}




/* Gap fixes for Page.tsx */
[data-scroll-container] {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0;
  padding: 0;
}

section[data-scroll] {
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
}

/* Challenges hover effect (unchanged) */
h3.apply-now {
  text-decoration: none;
  color: #000000 !important;
  position: relative;
  display: inline-block;
  z-index: 1;
  transition: text-decoration 0.3s ease, color 0.3s ease;
}

h3.apply-now::after {
  content: "→";
  position: absolute;
  right: -1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: #000000;
  transition: opacity 0.3s ease;
}

@media (min-width: 1024px) {
  h3.apply-now {
    text-decoration: underline;
    text-decoration-color: #000000;
  }
  h3.apply-now::after {
    content: none;
  }
}

h3.apply-now::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: #FFC83F;
  z-index: -1;
  transition: width 0.6s ease, padding 0.3s ease;
  box-sizing: border-box;
}

h3.apply-now:hover::before {
  width: 100%;
  padding: 0 8px;
}

h3.apply-now:hover {
  text-decoration: none !important;
  color: #000000 !important;
  padding: 3px;
}

[data-scroll-container] h3.apply-now {
  pointer-events: auto;
}

/* Connecting line for Hero (if applicable, from previous context) */
.steps-container {
  position: relative;
}

.steps-container::before {
  content: "";
  position: absolute;
  left: 6px;
  top: 8px;
  bottom: 8px;
  width: 1px;
  background-color:#969699;
  z-index: 0;
}

/* Floating animation for triangle */
.animate-float {
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px); /* Adjust height of float */
  }
}


@media (min-width: 1024px) {
  .dropdown-container {
    box-sizing: border-box; /* Ensure padding/borders are included in width */
    margin: 0;
    padding: 0;
  }
}

